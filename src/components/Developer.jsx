/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
/* eslint-disable react/no-unknown-property */

import React, { useEffect, useRef } from 'react';
import { useAnimations, useFBX, useGLTF } from '@react-three/drei';

function Developer({ animationName = 'walk', isDarkMode = false, ...props }) {
    const { nodes, materials } = useGLTF('/assets/models/Character.glb');

    // // Add mixamorig prefix to bone names
    // const boneMapping = {
    //     'Hips': 'mixamorigHips',
    //     'Spine': 'mixamorigSpine',
    //     'Spine1': 'mixamorigSpine1',
    //     'Spine2': 'mixamorigSpine2',
    //     'Neck': 'mixamorigNeck',
    //     'Head': 'mixamorigHead',
    //     'LeftShoulder': 'mixamorigLeftShoulder',
    //     'LeftArm': 'mixamorigLeftArm',
    //     'LeftForeArm': 'mixamorigLeftForeArm',
    //     'LeftHand': 'mixamorigLeftHand',
    //     'LeftHandThumb1': 'mixamorigLeftHandThumb1',
    //     'LeftHandThumb2': 'mixamorigLeftHandThumb2',
    //     'LeftHandThumb3': 'mixamorigLeftHandThumb3',
    //     'LeftHandIndex1': 'mixamorigLeftHandIndex1',
    //     'LeftHandIndex2': 'mixamorigLeftHandIndex2',
    //     'LeftHandIndex3': 'mixamorigLeftHandIndex3',
    //     'LeftHandMiddle1': 'mixamorigLeftHandMiddle1',
    //     'LeftHandMiddle2': 'mixamorigLeftHandMiddle2',
    //     'LeftHandMiddle3': 'mixamorigLeftHandMiddle3',
    //     'LeftHandRing1': 'mixamorigLeftHandRing1',
    //     'LeftHandRing2': 'mixamorigLeftHandRing2',
    //     'LeftHandRing3': 'mixamorigLeftHandRing3',
    //     'LeftHandPinky1': 'mixamorigLeftHandPinky1',
    //     'LeftHandPinky2': 'mixamorigLeftHandPinky2',
    //     'LeftHandPinky3': 'mixamorigLeftHandPinky3'
    // };

    // // Rename bones to match animation requirements
    // useEffect(() => {
    //     Object.entries(boneMapping).forEach(([original, target]) => {
    //         if (nodes[original]) {
    //             nodes[original].name = target;
    //         }
    //     });
    // }, [nodes]);

    const spotlightRef = useRef();
    const scale = { x: 1.7, y: 1.7, z: 1.7 };
    const position = { x: 2, y: 0.3, z: -1 };

    const screenLightColor = isDarkMode ? "#4ca6ff" : "#ffffff";
    const screenLightIntensity = isDarkMode ? 2 : 0;

    const fbx = useFBX('/assets/animations/Walking.fbx');
    const group = useRef();

    const walkAnimation = fbx.animations[0];
    walkAnimation.name = 'walk';

    const { actions } = useAnimations([walkAnimation], group);

    useEffect(() => {
        const action = actions[animationName];
        if (action) {
            action.reset().play();
        }
        return () => {
            if (action) {
                action.stop();
            }
        };
    }, [actions, animationName]);

    return (
        <>
            <group position={[position.x, position.y, position.z]} scale={[scale.x, scale.y, scale.z]} dispose={null} ref={group}>
                <primitive object={nodes.Hips} />
                <skinnedMesh
                    name="EyeLeft"
                    geometry={nodes.EyeLeft.geometry}
                    material={materials.Wolf3D_Eye}
                    skeleton={nodes.EyeLeft.skeleton}
                    morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
                    morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
                />
                <skinnedMesh
                    name="EyeRight"
                    geometry={nodes.EyeRight.geometry}
                    material={materials.Wolf3D_Eye}
                    skeleton={nodes.EyeRight.skeleton}
                    morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
                    morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
                />
                <skinnedMesh
                    name="Wolf3D_Head"
                    geometry={nodes.Wolf3D_Head.geometry}
                    material={materials.Wolf3D_Skin}
                    skeleton={nodes.Wolf3D_Head.skeleton}
                    morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
                    morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}
                />
                <skinnedMesh
                    name="Wolf3D_Teeth"
                    geometry={nodes.Wolf3D_Teeth.geometry}
                    material={materials.Wolf3D_Teeth}
                    skeleton={nodes.Wolf3D_Teeth.skeleton}
                    morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
                    morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}
                />
                <skinnedMesh
                    geometry={nodes.Wolf3D_Hair.geometry}
                    material={materials.Wolf3D_Hair}
                    skeleton={nodes.Wolf3D_Hair.skeleton}
                />
                <skinnedMesh
                    name="Wolf3D_Beard"
                    geometry={nodes.Wolf3D_Beard.geometry}
                    material={materials.Wolf3D_Beard}
                    skeleton={nodes.Wolf3D_Beard.skeleton}
                    morphTargetDictionary={nodes.Wolf3D_Beard.morphTargetDictionary}
                    morphTargetInfluences={nodes.Wolf3D_Beard.morphTargetInfluences}
                />
                <skinnedMesh
                    geometry={nodes.Wolf3D_Body.geometry}
                    material={materials.Wolf3D_Body}
                    skeleton={nodes.Wolf3D_Body.skeleton}
                />
                <skinnedMesh
                    geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
                    material={materials.Wolf3D_Outfit_Bottom}
                    skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
                />
                <skinnedMesh
                    geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
                    material={materials.Wolf3D_Outfit_Footwear}
                    skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
                />
                <skinnedMesh
                    geometry={nodes.Wolf3D_Outfit_Top.geometry}
                    material={materials.Wolf3D_Outfit_Top}
                    skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
                />
            </group>

            <spotLight
                ref={spotlightRef}
                color={screenLightColor}
                intensity={screenLightIntensity}
                position={[position.x, position.y + 1, position.z]}
                angle={Math.PI / 6}
                penumbra={0.5}
                castShadow
            />
        </>
    );
}

useGLTF.preload('/assets/models/Character.glb');

export default Developer;